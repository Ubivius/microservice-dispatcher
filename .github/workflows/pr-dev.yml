name: CI for Pull-Request on dev

on:
  pull_request:
    branches: [ dev ]

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Set up Go
      uses: actions/setup-go@v2
      with:
        go-version: 1.15

    - name: Build
      run: go build -v ./...

    - name: Unit tests
      run: go test -short -v ./...

  golangci-lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: golangci-lint
        uses: golangci/golangci-lint-action@v2
        with:
          version: v1.29

  publish-docker:
    needs: [ build-and-test, golangci-lint]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Prepare docker env
        id: fetch-docker-vars
        run: |
            chmod 700 .github/tools_install.sh
            ./.github/tools_install.sh
            IN=$(echo ${GITHUB_REPOSITORY})
            NAME=${IN#"Ubivius/"}
            VERSION=$(yq e '.version' ./chart/Chart.yaml)
            echo "::set-output name=REPO_NAME::$(echo $NAME)"
            echo "::set-output name=BRANCH::$(echo $GITHUB_REF)"
            echo "::set-output name=REPO_VERSION::$(echo $VERSION)"
        shell: bash

      - name: Build and Push Artefact to Registry
        uses: elgohr/Publish-Docker-Github-Action@master
        env:
          BUILD_TYPE: ${{ env.BUILD_TYPE }}
        with:
          name: ubiviushub/${{ steps.fetch-docker-vars.outputs.REPO_NAME }}
          username: ${{ env.DOCKERHUB_USER }}
          password: ${{ env.DOCKERHUB_PWD }}
          buildargs: BUILD_TYPE
          dockerfile: Dockerfile
          tags: "${{ steps.fetch-docker-vars.outputs.REPO_VERSION }}"